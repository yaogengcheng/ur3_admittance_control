#!/usr/bin/env python3
#-*- coding:utf-8 -*-
import socket
from threading import Thread 
import time


# socket.AF_INET (IPV4)
# socket.SOCK_STREAM (TCP)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# 监听 IP:port
s.bind(('127.0.0.1', 8999))

# 最大允许连接数量
s.listen(3)

# 死循环，重复的处理着每个客户端的请求
while True:

    # 阻塞 每当有客户端的请求过来开始执行
    # 连接处理 （已完成三次握手）并获取资源对象 | conn 请求对象 | addr 客户端地址 ip: port
    conn, addr = s.accept() 

    # 请求处理 | 读取客户端发送过来的数据 | recv(1024) 指定每次读取 1024 字节，当数据较长时可以通过 while 循环读取
    # data = conn.recv(1024).decode('utf-8')
    data = "0.052003436415528445 0.3147654951162265 0.3136344705861339 -0.35354257881860196 0.6123754446634613 0.35355443813683707 0.6123750640002141"
    # 响应处理 | 把客服端发送过来的数据又转发回去
    conn.sendall(data.encode('utf-8'))

    time.sleep(8)

    data = "-0.03880992458918975 0.3734191041125473 0.29513102644955364 -0.2718524327973405 0.7268999537871208 0.4201756985957593 0.4702819306288669"
    # 响应处理 | 把客服端发送过来的数据又转发回去
    conn.sendall(data.encode('utf-8'))

    time.sleep(8)
    
    data = "-0.17877460129518008 0.4015700701413151 0.20772656929130812 -0.15856184656722716 0.7967950433526841 0.4932320603901405 0.3109629146780718"
    # 响应处理 | 把客服端发送过来的数据又转发回去
    conn.sendall(data.encode('utf-8'))

    time.sleep(8)

    data = "-0.17521885973372708 0.38004058494194987 0.2041889139981189 -0.1583965246651819 0.796784999852631 0.49316850532809964 0.3111736337421338"
    # 响应处理 | 把客服端发送过来的数据又转发回去
    conn.sendall(data.encode('utf-8'))

    time.sleep(8)

    data = "-0.18595498647576642 0.32344482112086337 0.20443358491284455 -0.10291654478087253 0.7964829577396582 0.4771396005998383 0.35687656742924373"
    # 响应处理 | 把客服端发送过来的数据又转发回去
    conn.sendall(data.encode('utf-8'))

    # 关闭客户端连接
    conn.close()